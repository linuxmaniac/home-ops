---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kamailio-cfg
  namespace: sipwork
data:
  kamailio-local.cfg: |-
    #!define WITH_DEBUG
  kamailio.cfg: |-
    #!KAMAILIO

    ####### Defined Values #########
    # *** Value defines - IDs used later in config
    #!define DBGLEVEL 2

    ####### Include Local Config If Exists #########
    import_file "kamailio-local.cfg"

    ####### Global Parameters #########
    debug=DBGLEVEL
    log_stderror=yes
    log_prefix="{$mt $hdr(CSeq) $ci} "

    listen=udp:net1:5060 advertise "sip.sipwork.pro"
    listen=tcp:net1:5060 advertise "sip.sipwork.pro"

    ####### Modules Section ########
    loadmodule "app_python3.so"
    loadmodule "pv.so"
    #!ifdef WITH_DEBUG
    loadmodule "debugger.so"
    #!endif

    # ----------------- setting module-specific parameters ---------------
    #!ifdef WITH_DEBUG
    # ----- debugger params -----
    modparam("debugger", "mod_level_mode", 1)
    modparam("debugger", "mod_hash_size", 4)
    modparam("debugger", "mod_level", "core=2")
    #!endif

    ####### Routing Logic ########
    modparam("app_python3", "load", "/etc/kamailio/kamailio.py")
    cfgengine "python"
  kamailio.py: |-
    import KSR as KSR

    def mod_init():
        KSR.info("===== from Python mod init\n")
        return kamailio()

    class kamailio:
        def __init__(self):
            KSR.info('===== kamailio.__init__\n')

        def child_init(self, rank):
            return 0

        def ksr_request_route(self, msg):
            KSR.set_drop()
            KSR.info('request drop\n')
            return 1

        def ksr_reply_route(self, msg):
            return 1

        def ksr_onsend_route(self, msg):
            return 1

        def ksr_branch_route_one(self, msg):
            return 1

        def ksr_onreply_route_one(self, msg):
            return 1

        def ksr_failure_route_one(self, msg):
            return 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: sip
  name: sip
  namespace: sipwork
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: sip
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: sip
      annotations:
        k8s.v1.cni.cncf.io/networks: default/vlan-sip
    spec:
      initContainers: []
      containers:
        - env:
            - name: TZ
              value: Europe/Madrid
          image: ghcr.io/kamailio/kamailio:5.8.1-bookworm
          name: kamailio
          ports:
            - name: sip-udp
              protocol: UDP
              containerPort: 5060
            - name: sip-tcp
              protocol: TCP
              containerPort: 5060
            - name: sip-tls
              protocol: TCP
              containerPort: 5061
          resources: {}
          volumeMounts:
            - mountPath: /etc/kamailio/
              name: kam-cfg
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: kam-cfg
          configMap:
            name: kamailio-cfg
