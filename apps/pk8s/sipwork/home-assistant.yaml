---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: home-assistant
  name: home-assistant
  namespace: sipwork
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: home-assistant
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: home-assistant
    spec:
      containers:
        - env:
            - name: PGID
              value: '1000'
            - name: PUID
              value: '1000'
            - name: TZ
              value: Europe/Madrid
          image: lscr.io/linuxserver/homeassistant:2023.12.1 # {"$imagepolicy": "sipwork:home-assistant"}
          name: home-assistant
          ports:
            - containerPort: 8123
          resources: {}
          volumeMounts:
            - mountPath: /config
              name: home-assistant-config
      restartPolicy: Always
      volumes:
        - name: home-assistant-config
          persistentVolumeClaim:
            claimName: home-assistant-config
---
apiVersion: v1
kind: Service
metadata:
  name: homeassistant
  namespace: sipwork
spec:
  type: ClusterIP
  ports:
    - port: 8123
      targetPort: 8123
      name: http
      protocol: TCP
  selector:
    io.kompose.service: home-assistant
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homeassistant
  namespace: sipwork
  annotations:
    traefik.ingress.kubernetes.io/router.tls: 'true'
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.middlewares: traefik-redirectscheme@kubernetescrd
    traefik.frontend.passHostHeader: 'true'
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - home.sipwork.pro
      secretName: sipwork.pro-tls
  rules:
    - host: home.sipwork.pro
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: homeassistant
                port:
                  name: http
