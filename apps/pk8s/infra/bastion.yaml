apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bastion-config
  namespace: infra
spec:
  storageClassName: freenas-iscsi-csi
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bastion-custom-init
  namespace: infra
data:
  gpg-agent: |
    #!/bin/sh
    apk add --no-cache gpg dirmngr gpg-agent
  session: |
    #!/usr/bin/with-contenv sh
    apk add --no-cache zsh tmux vim
    usermod --shell /bin/zsh ${USER_NAME}
    (
      cd /config
      curl -O https://raw.githubusercontent.com/linuxmaniac/dotfiles/master/.tmux.conf
      curl -O https://raw.githubusercontent.com/linuxmaniac/dotfiles/master/.bash_aliases
    )
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bastion-custom-config
  namespace: infra
data:
  gpg.conf: |
    auto-key-locate keyserver
    keyserver hkps://hkps.pool.sks-keyservers.net
    keyserver hkps://keyring.debian.org
    personal-cipher-preferences AES256 AES192 AES CAST5
    personal-digest-preferences SHA512 SHA384 SHA256 SHA224
    default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed
    cert-digest-algo SHA512
    s2k-cipher-algo AES256
    s2k-digest-algo SHA512
    charset utf-8
    fixed-list-mode
    no-comments
    no-emit-version
    keyid-format 0xlong
    list-options show-uid-validity
    verify-options show-uid-validity
    with-fingerprint
    use-agent
    require-cross-certification
  gpg-agent.conf: |
    enable-ssh-support
    debug-level basic
  gpg-agent.zsh: |
    export GPG_TTY=$TTY

    # Fix for passphrase prompt on the correct tty
    # See https://www.gnupg.org/documentation/manuals/gnupg/Agent-Options.html#option-_002d_002denable_002dssh_002dsupport
    function _gpg-agent_update-tty_preexec {
      gpg-connect-agent updatestartuptty /bye &>/dev/null
    }
    autoload -U add-zsh-hook
    add-zsh-hook preexec _gpg-agent_update-tty_preexec

    # If enable-ssh-support is set, fix ssh agent integration
    if [[ $(gpgconf --list-options gpg-agent 2>/dev/null | awk -F: '$1=="enable-ssh-support" {print $10}') = 1 ]]; then
      unset SSH_AGENT_PID
      if [[ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]]; then
        export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
      fi
    fi
  zshrc: |
    source ~/gpg-agent.zsh
    source ~/.bash_aliases
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bastion
  namespace: infra
spec:
  replicas: 0
  selector:
    matchLabels:
      io.kompose.service: bastion
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: bastion
    spec:
      containers:
        - env:
            - name: PGID
              value: "1001"
            - name: PUID
              value: "1001"
            - name: TZ
              value: Europe/Madrid
            - name: PUBLIC_KEY_URL
              value: https://github.com/linuxmaniac.keys
            - name: USER_NAME
              value: vseva
          image: lscr.io/linuxserver/openssh-server:9.6_p1-r0-ls149 # {"$imagepolicy": "infra:openssh-server"}
          name: bastion
          stdin: true
          tty: true
          resources: {}
          ports:
            - name: ssh
              containerPort: 2222
          livenessProbe:
            tcpSocket:
              port: ssh
            initialDelaySeconds: 2
          volumeMounts:
            - mountPath: /config
              name: bastion-config
            - mountPath: /custom-cont-init.d
              name: bastion-custom-init
            - mountPath: /config/.gnupg/gpg.conf
              name: bastion-custom-config
              subPath: gpg.conf
            - mountPath: /config/.gnupg/gpg-agent.conf
              name: bastion-custom-config
              subPath: gpg-agent.conf
            - mountPath: /config/gpg-agent.zsh
              name: bastion-custom-config
              subPath: gpg-agent.zsh
            - mountPath: /config/.zshrc
              name: bastion-custom-config
              subPath: zshrc
      restartPolicy: Always
      volumes:
        - name: bastion-config
          persistentVolumeClaim:
            claimName: bastion-config
        - name: bastion-custom-init
          configMap:
            name: bastion-custom-init
        - name: bastion-custom-config
          configMap:
            name: bastion-custom-config
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/address-pool: external-pool
    metallb.universe.tf/loadBalancerIPs: 192.168.5.241
  labels:
    io.kompose.service: bastion
  name: bastion
  namespace: infra
spec:
  ports:
    - name: ssh
      port: 22
      targetPort: 2222
  type: LoadBalancer
  selector:
    io.kompose.service: bastion
