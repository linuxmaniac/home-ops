apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: bootxyz
  name: bootxyz
  namespace: infra
spec:
  selector:
    matchLabels:
      io.kompose.service: bootxyz
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: bootxyz
    spec:
      containers:
        - env:
            - name: PGID
              value: '1000'
            - name: PUID
              value: '1000'
            - name: TZ
              value: Europe/Madrid
            - name: WEB_APP_PORT
              value: '3000'
            - name: SUBFOLDER
              value: /bootxyz/
          image: lscr.io/linuxserver/netbootxyz:0.7.4 # {"$imagepolicy": "infra:netbootxyz"}
          name: bootxyz
          ports:
            - name: config
              containerPort: 3000
            - name: assets
              containerPort: 80
          resources: {}
          volumeMounts:
            - mountPath: /config
              name: bootxyz-config
            - mountPath: /config/menus
              name: bootxyz-tftp
            - mountPath: /assets
              name: bootxyz-assets
      restartPolicy: Always
      volumes:
        - name: bootxyz-assets
          persistentVolumeClaim:
            claimName: bootxyz-assets
        - name: bootxyz-config
          persistentVolumeClaim:
            claimName: bootxyz-config
        - name: bootxyz-tftp
          persistentVolumeClaim:
            claimName: bootxyz-tftp
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/address-pool: internal-pool
    metallb.universe.tf/loadBalancerIPs: 192.168.4.246
  labels:
    io.kompose.service: bootxyz
  name: bootxyz
  namespace: infra
spec:
  ports:
    - name: assets-svc
      port: 80
    - name: config-svc
      port: 3000
  type: LoadBalancer
  selector:
    io.kompose.service: bootxyz
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: bootxyz-assets
  namespace: infra
spec:
  stripPrefix:
    prefixes:
      - /assets
    forceSlash: false
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bootxyz
  namespace: infra
  annotations:
    traefik.ingress.kubernetes.io/router.tls: 'true'
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.middlewares: traefik-internal-ipallowlist@kubernetescrd
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - panel.torreviejawireless.org
      secretName: tw-tls
  rules:
    - host: panel.torreviejawireless.org
      http:
        paths:
          - path: /bootxyz
            pathType: Prefix
            backend:
              service:
                name: bootxyz
                port:
                  name: config-svc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bootxyz-assets
  namespace: infra
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.middlewares: infra-bootxyz-assets@kubernetescrd,traefik-internal-ipallowlist@kubernetescrd
spec:
  ingressClassName: traefik
  rules:
    - host: panel.torreviejawireless.org
      http:
        paths:
          - path: /assets
            pathType: Prefix
            backend:
              service:
                name: bootxyz
                port:
                  name: assets-svc
